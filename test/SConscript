#
# Copyright (C) 2011-2012 Alex Smith
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

import os

Import('env', 'config')

targets = [('32', []), ('64', ['-mcmodel=kernel'])]

# List of our own sources.
sources = map(File, [
	'%s/console.c' % (config['PLATFORM']),
	'main.c',
	'support.c',
	'../source/lib/printf.c',
])

# Build test kernel for each supported configuration.
for (target, flags) in [(x, y) for (x, y) in targets if config['KBOOT_HAVE_LOADER_KBOOT' + x]]:
	ldscript = env.LDScript('link%s.ld' % (target),
		'link-%s%s.ld.in' % (config['PLATFORM'], target))
	ccflags = [x for x in env['CCFLAGS'] if x not in ['-m32', '-m64']] + ['-m%s' % target] + flags
	linkflags = [x for x in env['LINKFLAGS'] if x not in ['-m32', '-m64']] + [
		'-m%s' % target, "-Wl,-T,${File('link%s.ld')}" % target]

	env.Program('test%s.elf' % (target),
		map(lambda x: env.Object('%s%s.o'
			% (os.path.splitext(os.path.basename(str(x)))[0], target), x,
			CCFLAGS = ccflags), sources),
		LINKFLAGS = linkflags)
	Depends('test%s.elf' % target, ldscript)
	Alias('test', File('test%s.elf' % target))
